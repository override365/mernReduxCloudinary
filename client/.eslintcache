[{"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\index.js":"1","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\App.js":"2","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\style\\style.js":"4","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Landing.js":"5","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Login.js":"6","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Register.js":"7","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Home.js":"8","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\index.js":"9","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\errorReducer.js":"11","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\types.js":"12","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\authActions.js":"13","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\setAuthToken.js":"14","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\api\\index.js":"15","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\private\\PrivateRoute.js":"16","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostCard.js":"17","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\postReducer.js":"18","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\postActions.js":"19","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostForm.js":"20","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\LikeButton.js":"21","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostDetail.js":"22","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\DarkModeToggle.js":"23","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\Navbar.js":"24","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\styleReducer.js":"25","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\styleActions.js":"26","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\RandomColor.js":"27","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\SideDrawer.js":"28","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Test\\Test.js":"29","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Private\\PrivateRoute.js":"30","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\User\\Profile.js":"31","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\userActions.js":"32","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\userReducer.js":"33"},{"size":984,"mtime":1612284303464,"results":"34","hashOfConfig":"35"},{"size":1813,"mtime":1611325629439,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":570,"mtime":1610685330144,"results":"38","hashOfConfig":"35"},{"size":507,"mtime":1611172427829,"results":"39","hashOfConfig":"35"},{"size":4139,"mtime":1609879953239,"results":"40","hashOfConfig":"35"},{"size":6824,"mtime":1609880040686,"results":"41","hashOfConfig":"35"},{"size":1857,"mtime":1611170981211,"results":"42","hashOfConfig":"35"},{"size":422,"mtime":1611175643896,"results":"43","hashOfConfig":"35"},{"size":661,"mtime":1609429437163,"results":"44","hashOfConfig":"35"},{"size":278,"mtime":1609103013958,"results":"45","hashOfConfig":"35"},{"size":523,"mtime":1611268304980,"results":"46","hashOfConfig":"35"},{"size":1450,"mtime":1609879785430,"results":"47","hashOfConfig":"35"},{"size":265,"mtime":1609103263255,"results":"48","hashOfConfig":"35"},{"size":640,"mtime":1611327266648,"results":"49","hashOfConfig":"35"},{"size":394,"mtime":1609879881242,"results":"50","hashOfConfig":"35"},{"size":3199,"mtime":1611108751804,"results":"51","hashOfConfig":"35"},{"size":739,"mtime":1611268362939,"results":"52","hashOfConfig":"35"},{"size":1350,"mtime":1610144642404,"results":"53","hashOfConfig":"35"},{"size":4173,"mtime":1611068261819,"results":"54","hashOfConfig":"35"},{"size":1572,"mtime":1610046857203,"results":"55","hashOfConfig":"35"},{"size":5637,"mtime":1610919862420,"results":"56","hashOfConfig":"35"},{"size":1239,"mtime":1610567036465,"results":"57","hashOfConfig":"35"},{"size":4096,"mtime":1611325708397,"results":"58","hashOfConfig":"35"},{"size":310,"mtime":1610569992071,"results":"59","hashOfConfig":"35"},{"size":550,"mtime":1610567089089,"results":"60","hashOfConfig":"35"},{"size":384,"mtime":1610590201775,"results":"61","hashOfConfig":"35"},{"size":2602,"mtime":1611327305994,"results":"62","hashOfConfig":"35"},{"size":318,"mtime":1611170503599,"results":"63","hashOfConfig":"35"},{"size":394,"mtime":1609879881242,"results":"64","hashOfConfig":"35"},{"size":2958,"mtime":1611334132953,"results":"65","hashOfConfig":"35"},{"size":342,"mtime":1611327281215,"results":"66","hashOfConfig":"35"},{"size":704,"mtime":1611328546841,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"180wtbh",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\App.js",[],["151","152"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reportWebVitals.js",[],["153","154"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\style\\style.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Landing.js",["155"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Landing() {\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (loginState !== false) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState])\r\n\r\n    \r\n    return (\r\n        <h1>\r\n            Landing\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default Landing;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Login.js",["156"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Link, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loginUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    // const [errors, setErrors] = useState({});\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n    const errorsState = useSelector(state => state.errors);\r\n\r\n    useEffect(() => {\r\n        if (loginState !== false) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const onChange = (e) => {\r\n        setInput({ ...input, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(input));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} noValidate>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Typography variant=\"h5\" style={{ paddingTop: 25, paddingBottom: 5 }}>Iniciar Sesi&oacute;n</Typography>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Correo\"\r\n                                name=\"email\"\r\n                                value={input.email}\r\n                                onChange={onChange}\r\n                                // error={errors.email ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={input.password}\r\n                                onChange={onChange}\r\n                                // error={errors.password ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8} sm={5} md={4} lg={3} xl={3} className=\"grid-item\" style={{ paddingTop: 20 }}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ height: 40 }} fullWidth>\r\n                                Iniciar Sesi&oacute;n\r\n                            </Button>\r\n                            <Typography style={{ paddingTop: 10 }}>\r\n                                ¿No tienes una cuenta?\r\n                                <Link href=\"/register\"> Reg&iacute;strate</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        {Object.keys(errorsState).length > 0 && (\r\n                            <div>\r\n                                <Alert severity=\"error\">\r\n                                    {Object.values(errorsState).map(err => \r\n                                        <AlertTitle key={err}>{err}</AlertTitle>    \r\n                                    )}\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Register.js",["157"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Link, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { registerUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Register() {\r\n    const classes = useStyles();\r\n    // const [errors, setErrors] = useState({});\r\n    const [input, setInput] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const errorsState = useSelector(state => state.errors);\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n\r\n    useEffect(() => {\r\n        if (loginState) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const onChange = (e) => {\r\n        setInput({ ...input, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(registerUser(input, history));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} noValidate>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Typography variant=\"h5\" style={{ paddingTop: 25, paddingBottom: 5 }}>Registrarse</Typography>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Nombre\"\r\n                                name=\"firstName\"\r\n                                value={input.firstName}\r\n                                onChange={onChange}\r\n                                // error={errors.firstName ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Apellido\"\r\n                                name=\"lastName\"\r\n                                value={input.lastName}\r\n                                onChange={onChange}\r\n                                // error={errors.lastName ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Usuario\"\r\n                                name=\"username\"\r\n                                value={input.username}\r\n                                onChange={onChange}\r\n                                // error={errors.username ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Correo\"\r\n                                name=\"email\"\r\n                                value={input.email}\r\n                                onChange={onChange}\r\n                                // error={errors.email ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={input.password}\r\n                                onChange={onChange}\r\n                                // error={errors.password ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Confirmar contraseña\"\r\n                                name=\"confirmPassword\"\r\n                                value={input.confirmPassword}\r\n                                onChange={onChange}\r\n                                // error={errors.confirmPassword ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={8} sm={5} md={4} lg={3} className=\"grid-item\" style={{ paddingTop: 20 }}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ height: 40 }} fullWidth>\r\n                                Registrarse\r\n                            </Button>\r\n                            <Typography style={{ paddingTop: 10 }}>\r\n                                ¿Ya tienes una cuenta?\r\n                                <Link href=\"/login\"> Iniciar Sesi&oacute;n</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        {Object.keys(errorsState).length > 0 && (\r\n                            <div>\r\n                                <Alert severity=\"error\">\r\n                                {Object.values(errorsState).map(err =>\r\n                                    <AlertTitle key={err}> {err} </AlertTitle>\r\n                                )}\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n\r\n","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Home.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\authReducer.js",["158"],"import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\errorReducer.js",["159"],"import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\types.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\authActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\api\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\private\\PrivateRoute.js",[],["160","161"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostCard.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\postReducer.js",["162"],"import { ADD_POST, GET_POST_DETAIL, GET_POSTS, LIKE_POST, COMMENT_POST } from \"../actions/types\";\r\n\r\nexport default function(state = [], action) {\r\n    switch (action.type) {\r\n        case COMMENT_POST:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case GET_POST_DETAIL:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case LIKE_POST:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case GET_POSTS:\r\n            return action.payload\r\n        case ADD_POST:\r\n            return [action.payload, ...state];\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\postActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostForm.js",["163"],"import React, { useState } from \"react\" ;\r\nimport axios from \"axios\";\r\nimport { Button, TextField, IconButton, CircularProgress } from \"@material-ui/core\";\r\nimport { ImageSearch, Cancel } from \"@material-ui/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addPost } from \"../../actions/postActions\";\r\n\r\nfunction PostForm() {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [postData, setPostData] = useState({ \r\n        body: \"\"\r\n    });\r\n    const [fileInput, setFileInput] = useState(\"\");\r\n    const [previewSource, setPreviewSource] = useState();\r\n    \r\n    const btnEnabled = postData.body.length > 0;\r\n\r\n    const onChange = (e) => {\r\n        setPostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const displayPreview = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    }\r\n\r\n    const discardImage = () => {\r\n        setPreviewSource(\"\");\r\n    }\r\n\r\n    const handleFileInput = (e) => {\r\n        const file = e.target.files[0];\r\n        displayPreview(file);\r\n    }\r\n\r\n    const uploadImageToCloudinary = async (base64EncodedImage) => {\r\n        const imageBase = JSON.stringify({ data: base64EncodedImage });\r\n        try {\r\n            const { data:response } = await axios.post(\"/upload/image\", imageBase, {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            });\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const clear = () => {\r\n        setPostData({body: \"\"});\r\n        setPreviewSource(\"\");\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        if (!previewSource) {\r\n            let newObject = {\r\n                body: postData.body,\r\n                url: \"\"\r\n            }\r\n            dispatch(addPost(newObject));\r\n            clear();\r\n        } else {\r\n            const imagen = await uploadImageToCloudinary(previewSource);\r\n            let newObjectWithImg = {\r\n                body: postData.body,\r\n                url: imagen.url\r\n            }\r\n            dispatch(addPost(newObjectWithImg));\r\n            clear();\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n        {loading === true ? \r\n            <CircularProgress /> \r\n            :\r\n            <div>\r\n                <form noValidate onSubmit={onSubmit}>\r\n                    <TextField \r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        placeholder=\"What's on your mind?\"\r\n                        name=\"body\"\r\n                        onChange={onChange}\r\n                        value={postData.body}\r\n                        style={{ paddingBottom: 5 }}\r\n                        multiline\r\n                        rowsMax={7}\r\n                    />\r\n                    {previewSource && (\r\n                        <>\r\n                            <img src={previewSource} alt=\"\" style={{ height: 200 }} />\r\n                            <IconButton style={{ float: \"left\" }} onClick={discardImage}>\r\n                                <Cancel />\r\n                            </IconButton>\r\n                        </>\r\n                    )}\r\n                    <br/>\r\n                    <IconButton component=\"label\" >\r\n                        <ImageSearch />\r\n                        <input type=\"file\" accept=\"image/*\"  name=\"image\" onChange={handleFileInput} value={fileInput} hidden />\r\n                    </IconButton>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!btnEnabled}\r\n                        style={{ float: \"right\", borderRadius: 50, textTransform: \"none\", marginTop: 5 }}\r\n                    >\r\n                        Post\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostForm;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostDetail.js",["164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { \r\n     CardMedia, Grid, Avatar, Card, CardHeader, CardContent, CardActions, Typography, TextField, Button\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nimport { stringToColor } from \"../../utils/RandomColor\";\r\nimport { getPosts, commentPost } from \"../../actions/postActions\";\r\nimport LikeButton from \"./LikeButton\";\r\n\r\nfunction PostDetail({ match }) {\r\n    const [commentData, setCommentData] = useState({\r\n        body: \"\"\r\n    });\r\n    const { id } = match.params;\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth);\r\n    const post = useSelector(state => state.posts.find(post => post._id === id));\r\n\r\n    const clearComment = () => {\r\n        setCommentData({\r\n            body: \"\"\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!post) {\r\n            dispatch(getPosts());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    if (!post) {\r\n        return (\r\n            <section>\r\n                <h2>Post not found</h2>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    const { _id, likes } = post;\r\n\r\n    const onChange = (e) => {\r\n        setCommentData({ ...commentData, [e.target.name]: e.target.value });\r\n    }\r\n    const btnEnabled = commentData.body.length > 0;\r\n\r\n    const submitComment = (e) => {\r\n        e.preventDefault();\r\n        clearComment();\r\n        dispatch(commentPost(_id, commentData));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3}>\r\n            <Grid item xs={12} sm={6} md={6} lg={6} xl={6} className=\"grid-item\">\r\n                <Card style={{ marginBottom: 15, marginTop: 15 }}>\r\n                    <CardHeader \r\n                        avatar={\r\n                            <Avatar style={{ backgroundColor: stringToColor(post.username) }} >\r\n                                {post.username.charAt(0).toUpperCase()}\r\n                            </Avatar>\r\n                        }\r\n                        title={post.username}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\">\r\n                            {post.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    {post.imageUrl && (\r\n                            <>\r\n                             <img src={post.imageUrl} style={{ height: \"100%\", width: \"100%\", objectFit: \"contain\" }} alt=\"\"/>\r\n                            </>\r\n                    )}\r\n                    <CardActions style={{ paddingLeft: 15 }}>\r\n                        <Typography variant=\"body2\" >\r\n                            {moment(post.createdAt).locale(\"es\").format(\"h:mm a - D MMMM YYYY\")}\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <CardActions style={{ paddingLeft: 15 }}>\r\n                        <Typography variant=\"caption\">\r\n                            {post.likes.length} likes\r\n                        </Typography>\r\n                        <Typography variant=\"caption\">\r\n                            {post.comments.length} comments\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <CardActions style={{ padding: 1 }} >\r\n                        <LikeButton user={user} post={{ _id, likes }} />\r\n                        <Typography>\r\n                            \r\n                        </Typography>\r\n                    </CardActions>\r\n                </Card>\r\n                <div style={{ height: 100 }}>\r\n                    <form noValidate>\r\n                        <TextField \r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Reply ...?\"\r\n                            name=\"body\"\r\n                            value={commentData.body}\r\n                            onChange={onChange}\r\n                            style={{ paddingBottom: 5 }}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!btnEnabled}\r\n                            onClick={submitComment}\r\n                            style={{ borderRadius: 50, float: \"right\", textTransform: \"none\" }}\r\n                        >\r\n                           Commentar\r\n                        </Button>\r\n                    </form>\r\n                    </div>\r\n                {post.comments.map(comment => (\r\n                    <Card key={comment._id} style={{ marginTop: 5 }}>\r\n                        <CardHeader \r\n                            avatar={\r\n                                <Avatar style={{ backgroundColor: stringToColor(comment.username) }} >\r\n                                    {comment.username.charAt(0).toUpperCase()}\r\n                                </Avatar>\r\n                            }\r\n                            title={comment.username}\r\n                            subheader={moment(comment.createdAt).locale(\"es\").fromNow()}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography>\r\n                                {comment.body}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))}     \r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostDetail;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\DarkModeToggle.js",["166"],"import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Switch } from \"@material-ui/core\";\r\n\r\nimport { getTheme, setTheme } from \"../../actions/styleActions\";\r\n\r\nfunction DarkModeToggle() {\r\n    const dispatch = useDispatch();\r\n    const [darkTheme, setDarkTheme] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const currentTheme = localStorage.getItem(\"darkMode\");\r\n        if (currentTheme) {\r\n            (currentTheme === \"disabled\") ? setDarkTheme(false) : setDarkTheme(true);\r\n        } else {\r\n            setDarkTheme(false);\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n        dispatch(getTheme());\r\n    }, [])\r\n\r\n    const handleSwitchTheme = () => {\r\n        if (darkTheme === false) {\r\n            setDarkTheme(true);\r\n            localStorage.setItem(\"darkMode\", \"enabled\");\r\n        } else {\r\n            setDarkTheme(false);\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n        dispatch(setTheme(darkTheme));\r\n    }\r\n\r\n    return (\r\n        <Switch \r\n            color=\"secondary\"\r\n            checked={darkTheme}\r\n            onChange={handleSwitchTheme}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\styleReducer.js",["167"],"import { GET_THEME, SET_THEME } from \"../actions/types\";\r\n\r\nexport default function(state = [], action) {\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return action.payload;\r\n        case GET_THEME:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\styleActions.js",[],["168","169"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\RandomColor.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\SideDrawer.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Test\\Test.js",["170","171","172","173","174","175","176","177"],"import React, { useState } from \"react\";\r\nimport { Drawer, IconButton, makeStyles, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\n\r\nfunction JustATest() {\r\n    \r\n\r\n    return (\r\n        <h1>\r\n            test\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default JustATest;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Private\\PrivateRoute.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\User\\Profile.js",["178","179"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Avatar, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { CalendarToday } from \"@material-ui/icons\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nimport PostCard from \"../Post/PostCard\";\r\nimport { getUserProfile } from \"../../actions/userActions\";\r\nimport { getPosts } from \"../../actions/postActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n        marginBottom: 15\r\n    },\r\n    joinedSection: {\r\n        display: \"flex\",\r\n        marginTop: 5,\r\n        marginBottom: 10\r\n    },\r\n    joinedDate: {\r\n        marginLeft: 5\r\n    }\r\n}));\r\n\r\nfunction Profile({ match }) {\r\n    const classes = useStyles();\r\n    const { username } = match.params;\r\n    const dispatch = useDispatch();\r\n    const { profile } = useSelector(state => state.user);\r\n    const posts = useSelector(state => state.posts);\r\n\r\n    useEffect(() => {\r\n        if (profile.username !== username) {\r\n            dispatch(getUserProfile(username));\r\n            dispatch(getPosts()); // change to only fetch posts from the user\r\n        }\r\n    }, [dispatch]);\r\n\r\n    if (profile.username !== username) {\r\n        return (\r\n            <section>\r\n                <h3>User not found</h3>\r\n            </section>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\" spacing={0} style={{ paddingTop: 20 }} >\r\n                <Grid item xs={12} sm={8} md={6} lg={6} xl={6} className=\"grid-item\">\r\n                    <Avatar className={classes.avatar} />    \r\n                    <Typography variant=\"h6\">\r\n                        {profile.firstName} {profile.lastName}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" >\r\n                        {profile.username}\r\n                    </Typography>\r\n                    <div className={classes.joinedSection}>\r\n                        <CalendarToday />\r\n                        <Typography className={classes.joinedDate}>\r\n                            Joined &nbsp;\r\n                            {moment(profile.joined).locale(\"es\").format(\"MMMM YYYY\")}\r\n                        </Typography>\r\n                    </div>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        {posts.filter((post) => post.username === profile.username).map((post) => (\r\n                            <Grid item key={post._id} xs={12} sm={12} md={12} lg={12} xl={12} className=\"grid-item\">\r\n                                <PostCard post={post} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\userReducer.js",["180"],"import { GET_USER_PROFILE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        joined: \"\"\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    username: action.payload.username,\r\n                    firstName: action.payload.firstName,\r\n                    lastName: action.payload.lastName,\r\n                    joined: action.payload.createdAt\r\n                } \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"181","replacedBy":"185"},{"ruleId":"183","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":13,"column":8,"nodeType":"189","endLine":13,"endColumn":20,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"188","line":32,"column":8,"nodeType":"189","endLine":32,"endColumn":20,"suggestions":"191"},{"ruleId":"187","severity":1,"message":"188","line":36,"column":8,"nodeType":"189","endLine":36,"endColumn":20,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":11,"column":1,"nodeType":"195","endLine":27,"endColumn":2},{"ruleId":"193","severity":1,"message":"194","line":5,"column":1,"nodeType":"195","endLine":12,"endColumn":2},{"ruleId":"181","replacedBy":"196"},{"ruleId":"183","replacedBy":"197"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":1,"nodeType":"195","endLine":18,"endColumn":2},{"ruleId":"198","severity":1,"message":"199","line":15,"column":23,"nodeType":"200","messageId":"201","endLine":15,"endColumn":35},{"ruleId":"198","severity":1,"message":"202","line":4,"column":6,"nodeType":"200","messageId":"201","endLine":4,"endColumn":15},{"ruleId":"187","severity":1,"message":"203","line":31,"column":8,"nodeType":"189","endLine":31,"endColumn":18,"suggestions":"204"},{"ruleId":"187","severity":1,"message":"205","line":20,"column":8,"nodeType":"189","endLine":20,"endColumn":10,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":1,"nodeType":"195","endLine":12,"endColumn":2},{"ruleId":"181","replacedBy":"207"},{"ruleId":"183","replacedBy":"208"},{"ruleId":"198","severity":1,"message":"209","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"210","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"198","severity":1,"message":"211","line":2,"column":18,"nodeType":"200","messageId":"201","endLine":2,"endColumn":28},{"ruleId":"198","severity":1,"message":"212","line":2,"column":30,"nodeType":"200","messageId":"201","endLine":2,"endColumn":40},{"ruleId":"198","severity":1,"message":"213","line":2,"column":42,"nodeType":"200","messageId":"201","endLine":2,"endColumn":46},{"ruleId":"198","severity":1,"message":"214","line":2,"column":48,"nodeType":"200","messageId":"201","endLine":2,"endColumn":56},{"ruleId":"198","severity":1,"message":"215","line":2,"column":58,"nodeType":"200","messageId":"201","endLine":2,"endColumn":70},{"ruleId":"198","severity":1,"message":"216","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"209","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"217","line":39,"column":8,"nodeType":"189","endLine":39,"endColumn":18,"suggestions":"218"},{"ruleId":"193","severity":1,"message":"194","line":12,"column":1,"nodeType":"195","endLine":27,"endColumn":2},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],["219"],["220"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["221"],["222"],["223"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["219"],["220"],"no-unused-vars","'setFileInput' is assigned a value but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["225"],["219"],["220"],"'useState' is defined but never used.","'Drawer' is defined but never used.","'IconButton' is defined but never used.","'makeStyles' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Menu' is defined but never used.","React Hook useEffect has missing dependencies: 'profile.username' and 'username'. Either include them or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"227","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [history, loginState]",{"range":"237","text":"238"},{"range":"239","text":"238"},{"range":"240","text":"238"},"Update the dependencies array to be: [dispatch, post]",{"range":"241","text":"242"},"Update the dependencies array to be: [dispatch]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, profile.username, username]",{"range":"245","text":"246"},[384,396],"[history, loginState]",[996,1008],[1093,1105],[1011,1021],"[dispatch, post]",[702,704],"[dispatch]",[1252,1262],"[dispatch, profile.username, username]"]