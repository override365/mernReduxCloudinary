[{"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\index.js":"1","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\App.js":"2","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\style\\style.js":"4","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Landing.js":"5","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Login.js":"6","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Register.js":"7","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Home.js":"8","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\index.js":"9","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\errorReducer.js":"11","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\types.js":"12","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\authActions.js":"13","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\setAuthToken.js":"14","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\api\\index.js":"15","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\private\\PrivateRoute.js":"16","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostCard.js":"17","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\postReducer.js":"18","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\postActions.js":"19","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostForm.js":"20","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\LikeButton.js":"21","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostDetail.js":"22","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\DarkModeToggle.js":"23","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\Navbar.js":"24","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\styleReducer.js":"25","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\styleActions.js":"26","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\RandomColor.js":"27","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Test\\UploadImage.js":"28"},{"size":984,"mtime":1610567363873,"results":"29","hashOfConfig":"30"},{"size":1687,"mtime":1610685580836,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":570,"mtime":1610685330144,"results":"33","hashOfConfig":"30"},{"size":152,"mtime":1609034619270,"results":"34","hashOfConfig":"30"},{"size":4139,"mtime":1609879953239,"results":"35","hashOfConfig":"30"},{"size":6824,"mtime":1609880040686,"results":"36","hashOfConfig":"30"},{"size":1857,"mtime":1610721268451,"results":"37","hashOfConfig":"30"},{"size":356,"mtime":1610566189423,"results":"38","hashOfConfig":"30"},{"size":661,"mtime":1609429437163,"results":"39","hashOfConfig":"30"},{"size":278,"mtime":1609103013958,"results":"40","hashOfConfig":"30"},{"size":426,"mtime":1610566669597,"results":"41","hashOfConfig":"30"},{"size":1450,"mtime":1609879785430,"results":"42","hashOfConfig":"30"},{"size":265,"mtime":1609103263255,"results":"43","hashOfConfig":"30"},{"size":544,"mtime":1610144602439,"results":"44","hashOfConfig":"30"},{"size":394,"mtime":1609879881242,"results":"45","hashOfConfig":"30"},{"size":3180,"mtime":1610914924491,"results":"46","hashOfConfig":"30"},{"size":739,"mtime":1610144405332,"results":"47","hashOfConfig":"30"},{"size":1350,"mtime":1610144642404,"results":"48","hashOfConfig":"30"},{"size":3874,"mtime":1610920156568,"results":"49","hashOfConfig":"30"},{"size":1572,"mtime":1610046857203,"results":"50","hashOfConfig":"30"},{"size":5637,"mtime":1610919862420,"results":"51","hashOfConfig":"30"},{"size":1239,"mtime":1610567036465,"results":"52","hashOfConfig":"30"},{"size":5675,"mtime":1610563367098,"results":"53","hashOfConfig":"30"},{"size":310,"mtime":1610569992071,"results":"54","hashOfConfig":"30"},{"size":550,"mtime":1610567089089,"results":"55","hashOfConfig":"30"},{"size":384,"mtime":1610590201775,"results":"56","hashOfConfig":"30"},{"size":3410,"mtime":1610812925460,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"180wtbh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\index.js",[],["124","125"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\App.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reportWebVitals.js",[],["126","127"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\style\\style.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Landing.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Login.js",["128"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Link, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loginUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    // const [errors, setErrors] = useState({});\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n    const errorsState = useSelector(state => state.errors);\r\n\r\n    useEffect(() => {\r\n        if (loginState !== false) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const onChange = (e) => {\r\n        setInput({ ...input, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(input));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} noValidate>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Typography variant=\"h5\" style={{ paddingTop: 25, paddingBottom: 5 }}>Iniciar Sesi&oacute;n</Typography>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Correo\"\r\n                                name=\"email\"\r\n                                value={input.email}\r\n                                onChange={onChange}\r\n                                // error={errors.email ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={input.password}\r\n                                onChange={onChange}\r\n                                // error={errors.password ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8} sm={5} md={4} lg={3} xl={3} className=\"grid-item\" style={{ paddingTop: 20 }}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ height: 40 }} fullWidth>\r\n                                Iniciar Sesi&oacute;n\r\n                            </Button>\r\n                            <Typography style={{ paddingTop: 10 }}>\r\n                                ¿No tienes una cuenta?\r\n                                <Link href=\"/register\"> Reg&iacute;strate</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        {Object.keys(errorsState).length > 0 && (\r\n                            <div>\r\n                                <Alert severity=\"error\">\r\n                                    {Object.values(errorsState).map(err => \r\n                                        <AlertTitle key={err}>{err}</AlertTitle>    \r\n                                    )}\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Register.js",["129"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Link, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { registerUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Register() {\r\n    const classes = useStyles();\r\n    // const [errors, setErrors] = useState({});\r\n    const [input, setInput] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const errorsState = useSelector(state => state.errors);\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n\r\n    useEffect(() => {\r\n        if (loginState) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const onChange = (e) => {\r\n        setInput({ ...input, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(registerUser(input, history));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} noValidate>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Typography variant=\"h5\" style={{ paddingTop: 25, paddingBottom: 5 }}>Registrarse</Typography>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Nombre\"\r\n                                name=\"firstName\"\r\n                                value={input.firstName}\r\n                                onChange={onChange}\r\n                                // error={errors.firstName ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Apellido\"\r\n                                name=\"lastName\"\r\n                                value={input.lastName}\r\n                                onChange={onChange}\r\n                                // error={errors.lastName ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Usuario\"\r\n                                name=\"username\"\r\n                                value={input.username}\r\n                                onChange={onChange}\r\n                                // error={errors.username ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Correo\"\r\n                                name=\"email\"\r\n                                value={input.email}\r\n                                onChange={onChange}\r\n                                // error={errors.email ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={input.password}\r\n                                onChange={onChange}\r\n                                // error={errors.password ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Confirmar contraseña\"\r\n                                name=\"confirmPassword\"\r\n                                value={input.confirmPassword}\r\n                                onChange={onChange}\r\n                                // error={errors.confirmPassword ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={8} sm={5} md={4} lg={3} className=\"grid-item\" style={{ paddingTop: 20 }}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ height: 40 }} fullWidth>\r\n                                Registrarse\r\n                            </Button>\r\n                            <Typography style={{ paddingTop: 10 }}>\r\n                                ¿Ya tienes una cuenta?\r\n                                <Link href=\"/login\"> Iniciar Sesi&oacute;n</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        {Object.keys(errorsState).length > 0 && (\r\n                            <div>\r\n                                <Alert severity=\"error\">\r\n                                {Object.values(errorsState).map(err =>\r\n                                    <AlertTitle key={err}> {err} </AlertTitle>\r\n                                )}\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n\r\n","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Home.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\authReducer.js",["130"],"import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\errorReducer.js",["131"],"import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\types.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\authActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\api\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\private\\PrivateRoute.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostCard.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\postReducer.js",["132"],"import { ADD_POST, GET_POST_DETAIL, GET_POSTS, LIKE_POST, COMMENT_POST } from \"../actions/types\";\r\n\r\nexport default function(state = [], action) {\r\n    switch (action.type) {\r\n        case COMMENT_POST:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case GET_POST_DETAIL:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case LIKE_POST:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case GET_POSTS:\r\n            return action.payload\r\n        case ADD_POST:\r\n            return [action.payload, ...state];\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\postActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostForm.js",["133","134","135","136"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostDetail.js",["137","138"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\DarkModeToggle.js",["139"],"import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Switch } from \"@material-ui/core\";\r\n\r\nimport { getTheme, setTheme } from \"../../actions/styleActions\";\r\n\r\nfunction DarkModeToggle() {\r\n    const dispatch = useDispatch();\r\n    const [darkTheme, setDarkTheme] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const currentTheme = localStorage.getItem(\"darkMode\");\r\n        if (currentTheme) {\r\n            (currentTheme === \"disabled\") ? setDarkTheme(false) : setDarkTheme(true);\r\n        } else {\r\n            setDarkTheme(false);\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n        dispatch(getTheme());\r\n    }, [])\r\n\r\n    const handleSwitchTheme = () => {\r\n        if (darkTheme === false) {\r\n            setDarkTheme(true);\r\n            localStorage.setItem(\"darkMode\", \"enabled\");\r\n        } else {\r\n            setDarkTheme(false);\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n        dispatch(setTheme(darkTheme));\r\n    }\r\n\r\n    return (\r\n        <Switch \r\n            color=\"secondary\"\r\n            checked={darkTheme}\r\n            onChange={handleSwitchTheme}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\styleReducer.js",["140"],"import { GET_THEME, SET_THEME } from \"../actions/types\";\r\n\r\nexport default function(state = [], action) {\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return action.payload;\r\n        case GET_THEME:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\styleActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\RandomColor.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Test\\UploadImage.js",["141","142","143"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addPost } from \"../../actions/postActions\";\r\n\r\nfunction UploadImage() {\r\n    const dispatch = useDispatch();\r\n    const [postData, setPostData] = useState({\r\n        body: \"\"\r\n    });\r\n    const [imgUrl, setImgUrl] = useState({});\r\n    const [fileInput, setFileInput] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState(\"\");\r\n    const [previewSource, setPreviewSource] = useState()\r\n\r\n    const onChange = (e) => {\r\n        setPostData({ ...postData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleFileInput = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFile(file);\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n        setPreviewSource(reader.result);\r\n        };\r\n    }\r\n\r\n    const uploadImageToCD = async (base64EncodedImage) => {\r\n        const imageBase = JSON.stringify({ data: base64EncodedImage });\r\n        try {\r\n            const {data:response} = await axios.post(\"/test/upload\", imageBase, {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            });\r\n            setImgUrl(response);\r\n            return response;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!previewSource) {\r\n            let newObject = {\r\n                body: postData.body,\r\n                url: \"\"\r\n            }\r\n            dispatch(addPost(newObject));\r\n        } else {\r\n            const imagen = await uploadImageToCD(previewSource);\r\n            let newObjectWithImg = {\r\n                body: postData.body,\r\n                url: imagen.url\r\n            }\r\n            dispatch(addPost(newObjectWithImg));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>\r\n            insert image here!\r\n        </h1>\r\n        <form noValidate onSubmit={handleSubmit} >\r\n            <TextField \r\n                variant=\"outlined\"\r\n                placeholder=\"What's on your mind?\"\r\n                name=\"body\"\r\n                onChange={onChange}\r\n                value={postData.body}\r\n                style={{ paddingBottom: 5, width: 300 }}\r\n            />\r\n            <br/>\r\n            <Button variant=\"contained\" component=\"label\">\r\n                Browse Image\r\n                <input type=\"file\" name=\"image\" onChange={handleFileInput} value={fileInput} hidden/>\r\n            </Button>&nbsp;\r\n            <Button \r\n                variant=\"contained\" \r\n                type=\"submit\"\r\n            >\r\n                Post\r\n            </Button>\r\n        </form>\r\n        {previewSource && (\r\n            <img src={previewSource} alt=\"\" style={{ height: 300 }} />\r\n        )}\r\n        {imgUrl && (\r\n            <p> {imgUrl.url} </p>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n// fetch(\"https://api.cloudinary.com/v1_1/strack/image/upload\", {\r\n        //     method: \"POST\",\r\n        //     body: formData\r\n        // })\r\n        // .then((response) => {\r\n        //     console.log(response);\r\n        // })\r\n        // .catch((error) => {\r\n        //     console.log(error);\r\n        // })",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":32,"column":8,"nodeType":"152","endLine":32,"endColumn":20,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"151","line":36,"column":8,"nodeType":"152","endLine":36,"endColumn":20,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":11,"column":1,"nodeType":"157","endLine":27,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":5,"column":1,"nodeType":"157","endLine":12,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":3,"column":1,"nodeType":"157","endLine":18,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":14,"column":12,"nodeType":"160","messageId":"161","endLine":14,"endColumn":18},{"ruleId":"158","severity":1,"message":"162","line":15,"column":23,"nodeType":"160","messageId":"161","endLine":15,"endColumn":35},{"ruleId":"158","severity":1,"message":"163","line":16,"column":12,"nodeType":"160","messageId":"161","endLine":16,"endColumn":24},{"ruleId":"158","severity":1,"message":"164","line":16,"column":26,"nodeType":"160","messageId":"161","endLine":16,"endColumn":41},{"ruleId":"158","severity":1,"message":"165","line":4,"column":6,"nodeType":"160","messageId":"161","endLine":4,"endColumn":15},{"ruleId":"150","severity":1,"message":"166","line":31,"column":8,"nodeType":"152","endLine":31,"endColumn":18,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"168","line":20,"column":8,"nodeType":"152","endLine":20,"endColumn":10,"suggestions":"169"},{"ruleId":"155","severity":1,"message":"156","line":3,"column":1,"nodeType":"157","endLine":12,"endColumn":2},{"ruleId":"158","severity":1,"message":"162","line":14,"column":23,"nodeType":"160","messageId":"161","endLine":14,"endColumn":35},{"ruleId":"158","severity":1,"message":"163","line":15,"column":12,"nodeType":"160","messageId":"161","endLine":15,"endColumn":24},{"ruleId":"158","severity":1,"message":"164","line":15,"column":26,"nodeType":"160","messageId":"161","endLine":15,"endColumn":41},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],["170"],["171"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["172"],["173"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'imgUrl' is assigned a value but never used.","Identifier","unusedVar","'setFileInput' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","'CardMedia' is defined but never used.","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [history, loginState]",{"range":"183","text":"184"},{"range":"185","text":"184"},"Update the dependencies array to be: [dispatch, post]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch]",{"range":"188","text":"189"},[996,1008],"[history, loginState]",[1093,1105],[1011,1021],"[dispatch, post]",[702,704],"[dispatch]"]