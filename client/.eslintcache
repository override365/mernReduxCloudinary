[{"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\index.js":"1","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\App.js":"2","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\style\\style.js":"4","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Landing.js":"5","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Login.js":"6","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Register.js":"7","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Home.js":"8","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\index.js":"9","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\errorReducer.js":"11","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\types.js":"12","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\authActions.js":"13","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\setAuthToken.js":"14","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\api\\index.js":"15","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\private\\PrivateRoute.js":"16","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostCard.js":"17","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\postReducer.js":"18","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\postActions.js":"19","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostForm.js":"20","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\LikeButton.js":"21","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostDetail.js":"22","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\DarkModeToggle.js":"23","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\Navbar.js":"24","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\styleReducer.js":"25","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\styleActions.js":"26"},{"size":984,"mtime":1610567363873,"results":"27","hashOfConfig":"28"},{"size":1602,"mtime":1610567156141,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":638,"mtime":1610565389071,"results":"31","hashOfConfig":"28"},{"size":152,"mtime":1609034619270,"results":"32","hashOfConfig":"28"},{"size":4139,"mtime":1609879953239,"results":"33","hashOfConfig":"28"},{"size":6824,"mtime":1609880040686,"results":"34","hashOfConfig":"28"},{"size":2354,"mtime":1610485359028,"results":"35","hashOfConfig":"28"},{"size":356,"mtime":1610566189423,"results":"36","hashOfConfig":"28"},{"size":661,"mtime":1609429437163,"results":"37","hashOfConfig":"28"},{"size":278,"mtime":1609103013958,"results":"38","hashOfConfig":"28"},{"size":426,"mtime":1610566669597,"results":"39","hashOfConfig":"28"},{"size":1450,"mtime":1609879785430,"results":"40","hashOfConfig":"28"},{"size":265,"mtime":1609103263255,"results":"41","hashOfConfig":"28"},{"size":544,"mtime":1610144602439,"results":"42","hashOfConfig":"28"},{"size":394,"mtime":1609879881242,"results":"43","hashOfConfig":"28"},{"size":2685,"mtime":1610139985482,"results":"44","hashOfConfig":"28"},{"size":739,"mtime":1610144405332,"results":"45","hashOfConfig":"28"},{"size":1350,"mtime":1610144642404,"results":"46","hashOfConfig":"28"},{"size":1694,"mtime":1610143830905,"results":"47","hashOfConfig":"28"},{"size":1572,"mtime":1610046857203,"results":"48","hashOfConfig":"28"},{"size":4829,"mtime":1610144163600,"results":"49","hashOfConfig":"28"},{"size":1239,"mtime":1610567036465,"results":"50","hashOfConfig":"28"},{"size":5675,"mtime":1610563367098,"results":"51","hashOfConfig":"28"},{"size":1104,"mtime":1610566653147,"results":"52","hashOfConfig":"28"},{"size":550,"mtime":1610567089089,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"180wtbh",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\App.js",["118","119"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reportWebVitals.js",[],["120","121"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\style\\style.js",["122"],"import { createMuiTheme } from \"@material-ui/core\"\r\n\r\nconst currentTheme = localStorage.getItem(\"darkMode\");\r\n\r\nconst light = {\r\n    typography: {\r\n        fontFamily: \"Google Sans, Arial\"\r\n    },\r\n    palette: {\r\n        type: \"light\"\r\n    }\r\n} \r\n\r\nconst dark = {\r\n    typography: {\r\n        fontFamily: \"Google Sans, Arial\"\r\n    },\r\n    palette: {\r\n        type: \"dark\"\r\n    }\r\n}\r\n\r\nexport const lightTheme = createMuiTheme(light);\r\nexport const darkTheme = createMuiTheme(dark);\r\n\r\nexport const themeType = (theme) => {\r\n    if (theme === true) {\r\n        return darkTheme;\r\n        \r\n    } else {\r\n        return lightTheme;\r\n    }\r\n}",["123","124"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Landing.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Login.js",["125"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Link, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loginUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    // const [errors, setErrors] = useState({});\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n    const errorsState = useSelector(state => state.errors);\r\n\r\n    useEffect(() => {\r\n        if (loginState !== false) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const onChange = (e) => {\r\n        setInput({ ...input, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(input));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} noValidate>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Typography variant=\"h5\" style={{ paddingTop: 25, paddingBottom: 5 }}>Iniciar Sesi&oacute;n</Typography>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Correo\"\r\n                                name=\"email\"\r\n                                value={input.email}\r\n                                onChange={onChange}\r\n                                // error={errors.email ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={input.password}\r\n                                onChange={onChange}\r\n                                // error={errors.password ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8} sm={5} md={4} lg={3} xl={3} className=\"grid-item\" style={{ paddingTop: 20 }}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ height: 40 }} fullWidth>\r\n                                Iniciar Sesi&oacute;n\r\n                            </Button>\r\n                            <Typography style={{ paddingTop: 10 }}>\r\n                                ¿No tienes una cuenta?\r\n                                <Link href=\"/register\"> Reg&iacute;strate</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        {Object.keys(errorsState).length > 0 && (\r\n                            <div>\r\n                                <Alert severity=\"error\">\r\n                                    {Object.values(errorsState).map(err => \r\n                                        <AlertTitle key={err}>{err}</AlertTitle>    \r\n                                    )}\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Register.js",["126"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Link, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { registerUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Register() {\r\n    const classes = useStyles();\r\n    // const [errors, setErrors] = useState({});\r\n    const [input, setInput] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const errorsState = useSelector(state => state.errors);\r\n    const loginState = useSelector(state => state.auth.isAuthenticated);\r\n\r\n    useEffect(() => {\r\n        if (loginState) {\r\n            history.push(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const onChange = (e) => {\r\n        setInput({ ...input, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(registerUser(input, history));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} noValidate>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Typography variant=\"h5\" style={{ paddingTop: 25, paddingBottom: 5 }}>Registrarse</Typography>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Nombre\"\r\n                                name=\"firstName\"\r\n                                value={input.firstName}\r\n                                onChange={onChange}\r\n                                // error={errors.firstName ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Apellido\"\r\n                                name=\"lastName\"\r\n                                value={input.lastName}\r\n                                onChange={onChange}\r\n                                // error={errors.lastName ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                label=\"Usuario\"\r\n                                name=\"username\"\r\n                                value={input.username}\r\n                                onChange={onChange}\r\n                                // error={errors.username ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Correo\"\r\n                                name=\"email\"\r\n                                value={input.email}\r\n                                onChange={onChange}\r\n                                // error={errors.email ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={input.password}\r\n                                onChange={onChange}\r\n                                // error={errors.password ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} md={5} lg={4} xl={4} className=\"grid-item\">\r\n                            <TextField \r\n                                fullWidth\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Confirmar contraseña\"\r\n                                name=\"confirmPassword\"\r\n                                value={input.confirmPassword}\r\n                                onChange={onChange}\r\n                                // error={errors.confirmPassword ? true : false}\r\n                            />    \r\n                        </Grid>\r\n                        <Grid item xs={8} sm={5} md={4} lg={3} className=\"grid-item\" style={{ paddingTop: 20 }}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ height: 40 }} fullWidth>\r\n                                Registrarse\r\n                            </Button>\r\n                            <Typography style={{ paddingTop: 10 }}>\r\n                                ¿Ya tienes una cuenta?\r\n                                <Link href=\"/login\"> Iniciar Sesi&oacute;n</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        {Object.keys(errorsState).length > 0 && (\r\n                            <div>\r\n                                <Alert severity=\"error\">\r\n                                {Object.values(errorsState).map(err =>\r\n                                    <AlertTitle key={err}> {err} </AlertTitle>\r\n                                )}\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n\r\n","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\pages\\Home.js",["127","128","129","130"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, Grid, Typography } from \"@material-ui/core\";\r\nimport { ExitToAppRounded } from \"@material-ui/icons\";\r\n\r\nimport { userLogout } from \"../actions/authActions\";\r\nimport { getPosts } from \"../actions/postActions\";\r\nimport PostForm from \"../components/Post/PostForm\";\r\nimport PostCard from \"../components/Post/PostCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    // const { user } = useSelector(state => state.auth);\r\n    const posts = useSelector(state => state.posts);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [dispatch]);\r\n    \r\n    const logoutClick = (e) => {\r\n        dispatch(userLogout());\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"center\" spacing={0} style={{ paddingTop: 20 }}>\r\n                <Grid item xs={false} sm={3} md={3} lg={3} xl={3} className=\"grid-item\">\r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} lg={6} xl={6} className=\"grid-item\">\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className=\"grid-item\">\r\n                            <Typography variant=\"h5\" >\r\n                                Recent posts\r\n                            </Typography>\r\n                            <PostForm />\r\n                        </Grid>\r\n                        {posts.map((post) => (\r\n                            <Grid key={post._id} item xs={12} sm={12} md={12} lg={12} xl={12} className=\"grid-item\">\r\n                                <PostCard post={post} />\r\n                            </Grid>    \r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={false} sm={3} md={3} lg={3} xl={3} className=\"grid-item\">\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\authReducer.js",["131"],"import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\errorReducer.js",["132"],"import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\types.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\authActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\api\\index.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\private\\PrivateRoute.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostCard.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\postReducer.js",["133"],"import { ADD_POST, GET_POST_DETAIL, GET_POSTS, LIKE_POST, COMMENT_POST } from \"../actions/types\";\r\n\r\nexport default function(state = [], action) {\r\n    switch (action.type) {\r\n        case COMMENT_POST:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case GET_POST_DETAIL:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case LIKE_POST:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case GET_POSTS:\r\n            return action.payload\r\n        case ADD_POST:\r\n            return [action.payload, ...state];\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\postActions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostForm.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Post\\PostDetail.js",["134","135","136"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { \r\n    Grid, Avatar, Card, CardHeader, CardContent, CardActions, IconButton, makeStyles, Typography, TextField, Button\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { getPosts, commentPost } from \"../../actions/postActions\";\r\nimport LikeButton from \"./LikeButton\";\r\n\r\nfunction PostDetail({ match }) {\r\n    const [commentData, setCommentData] = useState({\r\n        body: \"\"\r\n    });\r\n    const { id } = match.params;\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth);\r\n    const post = useSelector(state => state.posts.find(post => post._id === id));\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (!post) {\r\n            dispatch(getPosts());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    if (!post) {\r\n        return (\r\n            <section>\r\n                <h2>Post not found</h2>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    const { _id, likes } = post;\r\n\r\n    const onChange = (e) => {\r\n        setCommentData({ ...commentData, [e.target.name]: e.target.value });\r\n    }\r\n    const btnEnabled = commentData.body.length > 0;\r\n\r\n    const submitComment = (e) => {\r\n        e.preventDefault();\r\n        // console.log(_id, commentData);\r\n        dispatch(commentPost(_id, commentData));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3}>\r\n            <Grid item xs={12} sm={6} md={6} lg={6} xl={6} className=\"grid-item\">\r\n                <Card style={{ marginBottom: 15, marginTop: 15 }}>\r\n                    <CardHeader \r\n                        avatar={\r\n                            <Avatar>\r\n                                {post.username.charAt(0).toUpperCase()}\r\n                            </Avatar>\r\n                        }\r\n                        title={post.username}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\">\r\n                            {post.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions style={{ paddingLeft: 15 }}>\r\n                        <Typography>\r\n                            {moment(post.createdAt).format(\"h:mm a - MMMM Do YYYY\")}\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <CardActions style={{ paddingLeft: 15 }}>\r\n                        <Typography variant=\"subtitle2\">\r\n                            {post.likes.length} likes\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            {post.comments.length} comments\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <CardActions style={{ padding: 1 }} >\r\n                        <LikeButton user={user} post={{ _id, likes }} />\r\n                        <Typography>\r\n                            action buttons here\r\n                        </Typography>\r\n                    </CardActions>\r\n                </Card>\r\n                <Card>\r\n                    <form noValidate>\r\n                        <TextField \r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Reply ...?\"\r\n                            name=\"body\"\r\n                            value={commentData.body}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!btnEnabled}\r\n                            onClick={submitComment}\r\n                        >\r\n                           Reply \r\n                        </Button>\r\n                    </form>\r\n                </Card>\r\n                {post.comments.map(comment => (\r\n                    <Card key={comment._id} style={{ marginTop: 5 }}>\r\n                        <CardHeader \r\n                            avatar={\r\n                                <Avatar>\r\n                                    {comment.username.charAt(0).toUpperCase()}\r\n                                </Avatar>\r\n                            }\r\n                            title={comment.username}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography>\r\n                                {comment.body}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))}     \r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostDetail;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\DarkModeToggle.js",["137"],"import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Switch } from \"@material-ui/core\";\r\n\r\nimport { getTheme, setTheme } from \"../../actions/styleActions\";\r\n\r\nfunction DarkModeToggle() {\r\n    const dispatch = useDispatch();\r\n    const [darkTheme, setDarkTheme] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const currentTheme = localStorage.getItem(\"darkMode\");\r\n        if (currentTheme) {\r\n            (currentTheme === \"disabled\") ? setDarkTheme(false) : setDarkTheme(true);\r\n        } else {\r\n            setDarkTheme(false);\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n        dispatch(getTheme());\r\n    }, [])\r\n\r\n    const handleSwitchTheme = () => {\r\n        if (darkTheme === false) {\r\n            setDarkTheme(true);\r\n            localStorage.setItem(\"darkMode\", \"enabled\");\r\n        } else {\r\n            setDarkTheme(false);\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n        dispatch(setTheme(darkTheme));\r\n    }\r\n\r\n    return (\r\n        <Switch \r\n            color=\"secondary\"\r\n            checked={darkTheme}\r\n            onChange={handleSwitchTheme}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\reducers\\styleReducer.js",["138"],"import { GET_THEME } from \"../actions/types\";\r\n\r\nexport default function(state = [], action) {\r\n    switch (action.type) {\r\n        case s\r\n        case GET_THEME:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// import { ADD_POST, GET_POST_DETAIL, GET_POSTS, LIKE_POST, COMMENT_POST } from \"../actions/types\";\r\n\r\n// export default function(state = [], action) {\r\n//     switch (action.type) {\r\n//         case COMMENT_POST:\r\n//             return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n//         case GET_POST_DETAIL:\r\n//             return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n//         case LIKE_POST:\r\n//             return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n//         case GET_POSTS:\r\n//             return action.payload\r\n//         case ADD_POST:\r\n//             return [action.payload, ...state];\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\strack\\client\\src\\actions\\styleActions.js",[],{"ruleId":"139","severity":1,"message":"140","line":7,"column":33,"nodeType":"141","messageId":"142","endLine":7,"endColumn":42},{"ruleId":"139","severity":1,"message":"143","line":19,"column":11,"nodeType":"141","messageId":"142","endLine":19,"endColumn":19},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"139","severity":1,"message":"148","line":3,"column":7,"nodeType":"141","messageId":"142","endLine":3,"endColumn":19},{"ruleId":"144","replacedBy":"149"},{"ruleId":"146","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":32,"column":8,"nodeType":"153","endLine":32,"endColumn":20,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"152","line":36,"column":8,"nodeType":"153","endLine":36,"endColumn":20,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"156","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":16},{"ruleId":"139","severity":1,"message":"157","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":26},{"ruleId":"139","severity":1,"message":"158","line":21,"column":11,"nodeType":"141","messageId":"142","endLine":21,"endColumn":18},{"ruleId":"139","severity":1,"message":"159","line":30,"column":11,"nodeType":"141","messageId":"142","endLine":30,"endColumn":22},{"ruleId":"160","severity":1,"message":"161","line":11,"column":1,"nodeType":"162","endLine":27,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":5,"column":1,"nodeType":"162","endLine":12,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":3,"column":1,"nodeType":"162","endLine":18,"endColumn":2},{"ruleId":"139","severity":1,"message":"163","line":4,"column":63,"nodeType":"141","messageId":"142","endLine":4,"endColumn":73},{"ruleId":"139","severity":1,"message":"164","line":4,"column":75,"nodeType":"141","messageId":"142","endLine":4,"endColumn":85},{"ruleId":"151","severity":1,"message":"165","line":25,"column":8,"nodeType":"153","endLine":25,"endColumn":18,"suggestions":"166"},{"ruleId":"151","severity":1,"message":"167","line":20,"column":8,"nodeType":"153","endLine":20,"endColumn":10,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":1,"nodeType":"162","endLine":10,"endColumn":2},"no-unused-vars","'themeType' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-native-reassign",["169"],"no-negated-in-lhs",["170"],"'currentTheme' is assigned a value but never used.",["169"],["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["171"],["172"],"'Button' is defined but never used.","'ExitToAppRounded' is defined but never used.","'history' is assigned a value but never used.","'logoutClick' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'IconButton' is defined but never used.","'makeStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [history, loginState]",{"range":"182","text":"183"},{"range":"184","text":"183"},"Update the dependencies array to be: [dispatch, post]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch]",{"range":"187","text":"188"},[996,1008],"[history, loginState]",[1093,1105],[844,854],"[dispatch, post]",[702,704],"[dispatch]"]